```istediğim veriyi istediğim tipte nasıl alırım? ama bu extract işleminde amaç bu.
{
    "meta": {  meta
        "pagination": {   pagination
            "total": 1633,  -> .extract.path("meta.pagination.total")   -> int total , ototatik int dönüşümü kendisi de int olduğu için.
                            -> .extract.jsonPath.getInt("meta.pagination.total")  -> int e dönüştürüp öyle int e eşitliyor.
            "pages": 82,
            "page": 1,
            "limit": 20,
            "links": {     link
                "previous": null,
                "current": "https://gorest.co.in/public/v1/users?page=1",
                "next": "https://gorest.co.in/public/v1/users?page=2"
            }
        }
    },
    "data": [ User
        {
            "id": 1685,
            "name": "Qmzn",        -> bütün nameleri almak için    extract.path("data.name") -> List<String> değişkene atarken çevirecek
                                   -> extract.jsonPath().getList("data.name") -> list e çevirip öyle vermek olacaktı
            "email": "qvjsulha@gmail.com",
            "gender": "male",
            "status": "active"
        },
        {
            "id": 1687,
            "name": "Mavie Test 3",
            "email": "test3@email.com",
            "gender": "female",
            "status": "active"
        }
   ]
}


-> Bütün veriyi bir toplu olarak için -> 4 tane class yazman lazım ve -> extract.as(Genel.class)

public class Genel
{
     Meta meta;
     List<User> data;
}

genel.getMeta().getPagination().getTotal    -> bütün verilere bu şekilde ulaşabiliyorum.
-------------------------------------------------------------------------------------------------

jsonPath esas nerede devreye giriyor, yukarıdakilerde neyi yapamıyoruz ki jsonPath e ihtiyacımız oluyor ?


1- Sadece Linkleri bir Class tipinde elde etmek istiyorum ?

         extract.jsonPath.getObject("meta.pagination.links", Link.class)

         bu sorunu jsonPath çözebiliyor.Diğer classları yazmama gerek olmadan


2- tip dönüşümünü veriyi alırken yapması da bir avantaj.







```